on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main"]
  workflow_dispatch:
jobs: 
  train:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: pip install -r requirements/requirements.txt
    - name: Train and save pipeline
      run: python bikeshare_model/train_pipeline.py
    - uses: actions/upload-artifact@v2
      with:
        name: my-trained-pipeline
        path: bikeshare_model/trained_models/*.pkl
        retention-days: 1
  test:
    needs: train
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - uses: actions/download-artifact@v2
      with:
        name: my-trained-pipeline
        path: bikeshare_model/trained_models
    - name: Install dependencies
      run: pip install -r requirements/test_requirements.txt
  - name: Test with pytest
    run: pytest
build:
  needs: [train, test]
  runs-on: ubuntu-latest
  steps:
  - uses: actions/checkout@v3
  - name: Set up Python 3.10
    uses: actions/setup-python@v3
    with:
      python-version: '3.10'
  - uses: actions/download-artifact@v2
    with:
      name: my-trained-pipeline
      path: bikeshare_model/trained_models
  - name: Install dependencies
    run: pip install --upgrade build
  - name: Build package
    run: python -m build
  - uses: actions/upload-artifact@v2
    with:
      name: my-build-package
      path: dist/*.whl
      retention-days: 1
push-image:
  needs: [train, test, build]
  runs-on: ubuntu-latest
  steps:
  - name: Repo Checkout
    uses: actions/checkout@v2
  - uses: actions/download-artifact@v2
    with:
      name: my-build-package
      path: bikeshare_model_api
  - name: Login to Docker hub
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}      
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
  run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
- name: Build the Docker image for Fastapi app
  env:
    DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
  run: docker build . -f Dockerfile -t $DOCKER_USER/bikeshare-fastapi:latest
- name: Push the Docker Image
  env:
    DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
  run: docker push $DOCKER_USER/bikeshare-fastapi
- name: Logout to Docker hub
  run: docker logout      
      
      
      
# # This workflow will install Python dependencies, run tests with a variety of Python versions.
# name: Python package

# on:
#   push:
#     branches: [ "main"]
#   pull_request:
#     branches: [ "main"]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: ["3.8", "3.9", "3.10"]

#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python ${{ matrix.python-version}}
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version}}

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements/requirements.txt

#       - name: train_pipeline
#         run: |
#           python bikeshare_model/train_pipeline.py

#       - name: test with pytest
#         run: |
#           pytest

# # Vikrant added
#       - name: Dockerize and push
#         run: |
#           make build
#           make push
#           make release
# # END Vikrant added